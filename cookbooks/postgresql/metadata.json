{"name":"postgresql","version":"7.1.0","description":"Installs and configures postgresql for clients or servers","long_description":"# postgresql cookbook\n\n[![Build Status](https://travis-ci.org/sous-chefs/postgresql.svg?branch=master)](https://travis-ci.org/sous-chefs/postgresql) [![Cookbook Version](https://img.shields.io/cookbook/v/postgresql.svg)](https://supermarket.chef.io/cookbooks/postgresql)\n\nInstalls and configures PostgreSQL as a client or a server.\n\n## Upgrading\n\nIf you are wondering where all the recipes went in v7.0+, or how on earth I use this new cookbook please see upgrading.md for a full description.\n\n## Requirements\n\n### Platforms\n\n- Amazon Linux\n- Debian 7+\n- Ubuntu 14.04+\n- Red Hat/CentOS/Scientific 6+\n- Fedora\n\n## PostgreSQL version\n\nWe follow the currently supported versions listed on <https://www.postgresql.org/support/versioning/>\n\nThe earliest supported version is currently:\n\n- 9.3 (9.3.23)\n\n### Chef\n\n- Chef 13.8+\n\n### Cookbook Dependencies\n\n- `openssl`\n- `build-essential`\n\n## Resources\n\n### postgresql_client_install\n\nThis resource installs PostgreSQL client packages.\n\n#### Actions\n\n- `install` - (default) Install client packages\n\n#### Properties\n\nName                | Types             | Description                                                   | Default                                   | Required?\n------------------- | ----------------- | ------------------------------------------------------------- | ----------------------------------------- | ---------\n`version`           | String            | Version of PostgreSQL to install                              | '9.6'                                     | no\n`setup_repo`        | Boolean           | Define if you want to add the PostgreSQL repo                 | true                                      | no\n`hba_file`          | String            |                                                               | `#{conf_dir}/main/pg_hba.conf`            | no\n`ident_file`        | String            |                                                               | `#{conf_dir}/main/pg_ident.conf`          | no\n`external_pid_file` | String            |                                                               | `/var/run/postgresql/#{version}-main.pid` | no\n`password`          | String, nil       | Pass in a password, or have the cookbook generate one for you | 'generate'                                | no\n`port`              | [String, Integer] | Database listen port                                          | 5432                                      | no\n`initdb_locale`     | String            | Locale to initialise the database with                        | 'C'                                       | no\n\n#### Examples\n\nTo install '9.5' version:\n\n```\npostgresql_client_install 'My Postgresql Client install' do\n  version '9.5'\nend\n```\n\n### postgresql_server_install\n\nThis resource installs PostgreSQL client and server packages.\n\n#### Actions\n\n- `install` - (default) Install client and server packages\n- `create` - Initialize the database\n\n#### Properties\n\nName                | Types           | Description                                   | Default                                            | Required?\n------------------- | --------------- | --------------------------------------------- | -------------------------------------------------- | ---------\n`version`           | String          | Version of PostgreSQL to install              | '9.6'                                              | no\n`setup_repo`        | Boolean         | Define if you want to add the PostgreSQL repo | true                                               | no\n`hba_file`          | String          | Path of pg_hba.conf file                      | `<default_os_path>/pg_hba.conf'`                   | no\n`ident_file`        | String          | Path of pg_ident.conf file                    | `<default_os_path>/pg_ident.conf`                  | no\n`external_pid_file` | String          | Path of PID file                              | `/var/run/postgresql/<version>-main.pid</version>` | no\n`password`          | String, nil     | Set postgresql user password                  | 'generate'                                         | no\n`port`              | String, Integer | Set listen port of postgresql service         | 5432                                               | no\n\n#### Examples\n\nTo install PostgreSQL server, set you own postgres password and set another service port.\n\n```\npostgresql_server_install 'My Postgresql Server install' do\n  action :install\nend\n\npostgresql_server_install 'Setup my postgresql 9.5 server' do\n  password 'MyP4ssw0d'\n  port 5433\n  action :create\nend\n```\n\n### postgresql_server_conf\n\nThis resource manages postgresql.conf configuration file.\n\n#### Actions\n\n- `modify` - (default) Manager PostgreSQL configuration file (postgresql.conf)\n\n#### Properties\n\nName                   | Types  | Description                             | Default                                             | Required?\n---------------------- | ------ | --------------------------------------- | --------------------------------------------------- | ---------\n`version`              | String | Version of PostgreSQL to install        | '9.6'                                               | no\n`data_directory`       | String | Path of postgresql data directory       | `<default_os_data_path>`                            | no\n`hba_file`             | String | Path of pg_hba.conf file                | `<default_os_conf_path>/pg_hba.conf`                | no\n`ident_file`           | String | Path of pg_ident.conf file              | `<default_os_conf_path>/pg_ident.conf`              | no\n`external_pid_file`    | String | Path of PID file                        | `/var/run/postgresql/<postgresql_version>-main.pid` | no\n`stats_temp_directory` | String | Path of stats file                      | `/var/run/postgresql/version>-main.pg_stat_tmp`     | no\n`additional_config`    | Hash   | Extra configuration for the config file | {}                                                  | no\n\n#### Examples\n\nTo setup your PostgreSQL configuration with a specific data directory. If you have installed a specific version of PostgreSQL (different from 9.6), you must specify version in this resource too.\n\n```\npostgresql_server_conf 'My PostgreSQL Config' do\n  version '9.5'\n  data_directory '/data/postgresql/9.5/main'\n  notification :reload\nend\n```\n\n### postgresql_extension\n\nThis resource manages postgresql extensions for a given database.\n\n#### Actions\n\n- `create` - (default) Creates an extension in a given database\n- `drop` - Drops an extension from the database\n\n#### Properties\n\nName          | Types  | Description                                                                      | Default          | Required?\n------------- | ------ | -------------------------------------------------------------------------------- | ---------------- | ---------\n`database`    | String | Name of the database to install the extension into                               |                  | yes\n`extension`   | String | Name of the extension to install the database                                    | Name of resource | yes\n`old_version` | String | Older module name for new extension replacement. Appends FROM to extension query |                  | no\n\n#### Examples\n\nTo install the `adminpack` extension:\n\n```ruby\n# Add the contrib package in Ubuntu/Debian\npackage 'postgresql-contrib-9.6'\n\n# Install adminpack extension\npostgresql_extension 'postgres adminpack' do\n  database 'postgres'\n  extension 'adminpack'\nend\n```\n\n### postgresql_access\n\nThis resource uses the accumulator pattern to build up the `pg_hba.conf` file via chef resources instead of piling on a mountain of chef attributes to make this cookbook more reusable. It directly mirrors the configuration options of the postgres hba file in the resource and by default notifies the server with a reload to avoid a full restart, causing a potential outage of service. To revoke access, simply remove the resource and the access change won't be computed into the final `pg_hba.conf`\n\n#### Actions\n\n- `grant` - (default) Creates an access line inside of `pg_hba.conf`\n\n#### Properties\n\nName            | Types  | Description                                                                               | Default           | Required?\n--------------- | ------ | ----------------------------------------------------------------------------------------- | ----------------- | ---------\n`name`          | String | Name of the access resource, this is left as a comment inside the `pg_hba` config         | Resource name     | yes\n`source`        | String | The cookbook template filename if you want to use your own custom template                | 'pg_hba.conf.erb' | yes\n`cookbook`      | String | The cookbook to look in for the template source                                           | 'postgresql'      | yes\n`comment`       | String | A comment to leave above the entry in `pg_hba`                                            | nil               | no\n`access_type`   | String | The type of access, e.g. local or host                                                    | 'local'           | yes\n`access_db`     | String | The database to access. Can use 'all' for all databases                                   | 'all'             | yes\n`access_user`   | String | The user accessing the database. Can use 'all' for any user                               | 'all'             | yes\n`access_addr`   | String | The address(es) allowed access. Can be nil if method ident is used since it is local then | nil               | no\n`access_method` | String | Authentication method to use                                                              | 'ident'           | yes\n`notification`  | Symbol | How to notify Postgres of the access change.                                              | :reload           | yes\n\n#### Examples\n\nTo grant access to the postgresql user with ident authentication:\n\n```ruby\npostgresql_access 'local_postgres_superuser' do\n  comment 'Local postgres superuser access'\n  access_type 'local'\n  access_db 'all'\n  access_user 'postgres'\n  access_addr nil\n  access_method 'ident'\nend\n```\n\nThis generates the following line in the `pg_hba.conf`:\n\n```\n# Local postgres superuser access\nlocal   all             postgres                                ident\n```\n\n**Note**: The template by default generates a local access for Unix domain sockets only to support running the SQL execute resources. In Postgres version 9.1 and higher, the method is 'peer' instead of 'ident' which is identical. It looks like this:\n\n```\n# \"local\" is for Unix domain socket connections only\nlocal   all             all                                     peer\n```\n\n### postgresql_ident\n\nThis resource generate `pg_ident.conf` configuration file to manage user mapping between system and PostgreSQL users.\n\n#### Actions\n\n- `create` - (default) Creates an mapping line inside of `pg_ident.conf`\n\n#### Properties\n\nName           | Types       | Description                                                                | Default             | Required?\n-------------- | ----------- | -------------------------------------------------------------------------- | ------------------- | ---------\n`mapname`      | String      | Name of the user mapping                                                   | Resource name       | yes\n`source`       | String      | The cookbook template filename if you want to use your own custom template | 'pg_ident.conf.erb' | no\n`cookbook`     | String      | The cookbook to look in for the template source                            | 'postgresql'        | no\n`comment`      | String, nil | A comment to leave above the entry in `pg_ident`                           | nil                 | no\n`system_user`  | String      | System user or regexp used for the mapping                                 | None                | yes\n`pg_user`      | String      | Pg user or regexp used for the mapping                                     | None                | yes\n`notification` | Symbol      | How to notify Postgres of the access change.                               | :reload             | no\n\n#### Examples\n\nCreates a `mymapping` mapping that map `john` system user to `user1` PostgreSQL user:\n\n```ruby\npostgresql_ident 'Map john to user1' do\n  comment 'John Mapping'\n  mapname 'mymapping'\n  system_user 'john'\n  pg_user 'user1'\nend\n```\n\nThis generates the following line in the `pg_ident.conf`:\n\n```\n# MAPNAME       SYSTEM-USERNAME         PG-USERNAME\n\n# John Mapping\nmymapping       john                    user1\n```\n\nTo grant access to the foo user with password authentication:\n\n```ruby\npostgresql_access 'local_foo_user' do\n  comment 'Foo user access'\n  access_type 'host'\n  access_db 'all'\n  access_user 'foo'\n  access_addr '127.0.0.1/32'\n  access_method 'md5'\nend\n```\n\nThis generates the following line in the `pg_hba.conf`:\n\n```\n# Local postgres superuser access\nhost   all             foo               127.0.0.1/32           ident\n```\n\n### postgresql_database\n\nThis resource manages PostgreSQL databases.\n\n#### Actions\n\n- `create` - (default) Creates the given database.\n- `drop` - Drops the given database.\n\n#### Properties\n\nName       | Types   | Description                                                         | Default             | Required?\n---------- | ------- | ------------------------------------------------------------------- | ------------------- | ---------\n`database` | String  | Name of the database to create                                      | Resource name       | yes\n`user`     | String  | User which run psql command                                         | 'postgres'          | no\n`template` | String  | Template used to create the new database                            | 'template1'         | no\n`host`     | String  | Define the host server where the database creation will be executed | Not set (localhost) | no\n`port`     | Integer | Define the port of Postgresql server                                | 5432                | no\n`encoding` | String  | Define database encoding                                            | 'UTF-8'             | no\n`locale`   | String  | Define database locale                                              | 'en_US.UTF-8'       | no\n`owner`    | String  | Define the owner of the database                                    | Not set             | no\n\n#### Examples\n\nTo create database named 'my_app' with owner 'user1':\n\n```ruby\npostgresql_database 'my_app' do\n  owner 'user1'\nend\n```\n\n### postgresql_user\n\nThis resource manage PostgreSQL users.\n\n#### Actions\n\n- `create` - (default) Creates the given user with default or given privileges.\n- `update` - Update user privilieges.\n- `drop` - Deletes the given user.\n\n#### Properties\n\nName                 | Types   | Description                                     | Default | Required?\n-------------------- | ------- | ----------------------------------------------- | ------- | ---------\n`user`               | String  | User to create                                  |         | Yes\n`superuser`          | Boolean | Define if user needs superuser role             | false   | no\n`createdb`           | Boolean | Define if user needs createdb role              | false   | no\n`createrole`         | Boolean | Define if user needs createrole role            | false   | no\n`inherit`            | Boolean | Define if user inherits the privileges of roles | true    | no\n`replication`        | Boolean | Define if user needs replication role           | false   | no\n`login`              | Boolean | Define if user can login                        | true    | no\n`password`           | String  | Set user's password                             |         | no\n`encrypted_password` | String  | Set user's password with an hashed password     |         | no\n`valid_until`        | String  | Define an account expiration date               |         | no\n\n#### Examples\n\nCreate an user `user1` with a password, with `createdb` role and set an expiration date to 2018, Dec 21.\n\n```ruby\npostgresql_user 'user1' do\n  password 'UserP4ssword'\n  createdb true\n  valid_until '2018-12-31'\nend\n```\n\n## Usage\n\nTo install and configure your PostgreSQL instance you need to create your own cookbook and call needed resources with your own parameters.\n\nMore examples can be found in `test/cookbooks/test/recipes`\n\n## Example Useage\n\nExample: cookbooks/my_postgresql/recipes/default.rb\n\n```ruby\npostgresql_client_install 'Postgresql Client' do\n  setup_repo false\n  version '9.5'\nend\n\npostgresql_server_install 'Postgresql Server' do\n  version '9.5'\n  setup_repo false\n  password 'P0sgresP4ssword'\nend\n\npostgresql_server_conf 'PostgreSQL Config' do\n  notification :reload\nend\n```\n\n## Contributing\n\nPlease refer to each project's style guidelines and guidelines for submitting patches and additions. In general, we follow the \"fork-and-pull\" Git workflow.\n\n1. **Fork** the repo on GitHub\n2. **Clone** the project to your own machine\n3. **Commit** changes to your own branch\n4. **Push** your work back up to your fork\n5. Submit a **Pull request** so that we can review your changes\n\nNOTE: Be sure to merge the latest from \"upstream\" before making a pull request!\n\n[Contribution informations for this project] (CONTRIBUTING.md)\n\n## License\n\nCopyright 2010-2017, Chef Software, Inc.\n\n```text\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"Sous Chefs","maintainer_email":"help@sous-chefs.org","license":"Apache-2.0","platforms":{"ubuntu":">= 0.0.0","debian":">= 0.0.0","fedora":">= 0.0.0","amazon":">= 0.0.0","redhat":">= 0.0.0","centos":">= 0.0.0","scientific":">= 0.0.0","oracle":">= 0.0.0"},"dependencies":{"build-essential":">= 2.0.0","openssl":">= 4.0"},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{},"source_url":"https://github.com/sous-chefs/postgresql","issues_url":"https://github.com/sous-chefs/postgresql/issues","chef_version":[[">= 13.8"]],"ohai_version":[]}